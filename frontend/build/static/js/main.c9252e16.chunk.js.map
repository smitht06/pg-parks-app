{"version":3,"sources":["../node_modules/express/lib sync","components/Header.js","components/SiteType.js","screens/HomeScreen.js","screens/SiteTypeScreen.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Header","Navbar","bg","variant","collapseOnSelect","Container","Brand","Image","src","fluid","Nav","className","Link","SiteType","Card","to","Img","Body","HomeScreen","Row","Col","sm","md","lg","xl","SiteTypeScreen","App","path","component","exact","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.c9252e16.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 289;","import React from 'react';\nimport { Navbar, Nav, Container } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Image } from 'react-bootstrap';\nexport default function Header() {\n\treturn (\n\t\t<header>\n\t\t\t<Navbar bg='primary' variant='dark' collapseOnSelect>\n\t\t\t\t<Container>\n\t\t\t\t\t<Navbar.Brand> <Image src='../images/clicktohome.png' fluid/></Navbar.Brand>\n\n\t\t\t\t\t<Nav className='ml-auto'>\n\t\t\t\t\t\t<Nav.Link>\n\t\t\t\t\t\t\t<i className='fas fa-shopping-cart'></i> Cart\n\t\t\t\t\t\t</Nav.Link>\n\n\t\t\t\t\t\t<Nav.Link>\n\t\t\t\t\t\t\t<i className='fas fa-user'></i> Login\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t</Nav>\n\t\t\t\t</Container>\n\t\t\t</Navbar>\n\t\t</header>\n\t);\n}\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nfunction SiteType() {\n    return (\n        <div>\n            <Card className='my-3 p-3 rounded'>\n            <Link to=\"/sitetype\"> \n                <Card.Img src='./images/adultfitness.jpeg' variant='top' />\n                </Link>\n                <Card.Body>\n                    <strong>Hello world</strong>\n                </Card.Body>\n            </Card>\n        </div>\n    )\n}\n\nexport default SiteType\n","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { Image } from 'react-bootstrap';\nimport SiteType from '../components/SiteType';\n\nfunction HomeScreen() {\n\treturn (\n        <>\n\t\t\t<Image src='../images/mansion.png' fluid/>\n            <Row>\n            <Col sm={12} md={6} lg={4} xl={3}>\n            <SiteType/>\n            </Col>\n            <Col sm={12} md={6} lg={4} xl={3}>\n            <SiteType/>\n            </Col>\n            <Col sm={12} md={6} lg={4} xl={3}>\n            <SiteType/>\n            </Col>\n            <Col sm={12} md={6} lg={4} xl={3}>\n            <SiteType/>\n            </Col>\n           \n            </Row>\n            <Row>\n            <Col sm={12} md={6} lg={4} xl={3}>\n            <SiteType/>\n            </Col>\n            <Col sm={12} md={6} lg={4} xl={3}>\n            <SiteType/>\n            </Col>\n            <Col sm={12} md={6} lg={4} xl={3}>\n            <SiteType/>\n            </Col>\n            <Col sm={12} md={6} lg={4} xl={3}>\n            <SiteType/>\n            </Col>\n            </Row>\n        </>\n\t);\n}\n\nexport default HomeScreen;\n","import { Route } from 'express';\nimport React from 'react';\n\nfunction SiteTypeScreen() {\n\treturn <div>\n\t\t<h1>HIIII</h1>\n\t</div>;\n}\n\nexport default SiteTypeScreen;\n","import React from 'react';\nimport './bootstrap.css';\nimport Header from './components/Header';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport HomeScreen from './screens/HomeScreen';\nimport SiteTypeScreen from './screens/SiteTypeScreen';\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<Header />\n\t\t\t<main>\n\t\t\t\t<Container>\n\t\t\t\t\t<Route path='/' component={HomeScreen} exact />\n\t\t\t\t</Container>\n\t\t\t\t<Container>\n\t\t\t\t\t<Route path='/sitetype' component={SiteTypeScreen}/>\n\t\t\t\t</Container>\n\t\t\t</main>\n\t\t\t<footer />\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport './bootstrap.css';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}